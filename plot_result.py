import pickle
import numpy as np
from matplotlib import pyplot as plt

data = pickle.load(open("/data/projects/GNAS/logs/2018_12_17_06_27_11/ga_result.pickle", "rb"))
fitness = np.stack(data.result_dict.get('Fitness'))
mode = False
epochs = np.linspace(0, fitness.shape[0] - 1, fitness.shape[0])
plt.subplot(2, 3, 1)
plt.errorbar(epochs, np.mean(fitness, axis=1), np.std(fitness, axis=1), label='population mean fitness')
plt.plot(epochs, np.min(fitness, axis=1), '*--', label='min fitness')
plt.plot(epochs, np.max(fitness, axis=1), '--', label='max fitness')
plt.grid()
plt.legend()
plt.title('Population fitness over validation set')
plt.xlabel('Epoch')
plt.ylabel('Loss')
if mode:

    plt.subplot(2, 3, 2)
    plt.plot(epochs, np.asarray(data.result_dict.get('Loss')), label='Loss')
    plt.plot(epochs, np.min(fitness, axis=1), '*--', label='min fitness')
    plt.title('Loss over training set')
    plt.xlabel('Epoch')
    plt.legend()
    plt.ylabel('Loss')
    plt.grid()
    plt.subplot(2, 3, 3)
    plt.plot(epochs, np.asarray(data.result_dict.get('Annealing')))
    plt.title('Annealing Progress')
    plt.xlabel('Epoch')
    plt.ylabel('Annealing')
    plt.grid()
    plt.subplot(2, 2, 4)
    plt.plot(epochs, np.asarray(data.result_dict.get('LR')))
    plt.title('Learning Rate Progress')
    plt.xlabel('Epoch')
    plt.ylabel('Learning Rate')
    plt.grid()
    plt.show()
else:
    plt.subplot(2,3, 2)
    plt.plot(epochs, np.asarray(data.result_dict.get('Training Accuracy')), label='Loss')
    plt.plot(epochs, np.max(fitness, axis=1), '--', label='max fitness')
    plt.title('Loss over training set')
    plt.xlabel('Epoch')
    plt.legend()
    plt.ylabel('Accuracy[%]')
    plt.grid()
    plt.subplot(2, 3, 3)
    plt.plot(epochs, np.asarray(data.result_dict.get('Training Loss')))
    plt.title('Training Loss')
    plt.xlabel('Epoch')
    plt.ylabel('Loss')
    plt.grid()
    plt.subplot(2, 3, 4)
    plt.plot(epochs, np.asarray(data.result_dict.get('LR')))
    plt.title('Learning Rate Progress')
    plt.xlabel('Epoch')
    plt.ylabel('Learning Rate')
    plt.grid()
    plt.subplot(2, 3, 5)
    plt.plot(epochs, np.asarray(data.result_dict.get('Annealing')))
    plt.title('Annealing Progress')
    plt.xlabel('Epoch')
    plt.ylabel('Annealing')
    plt.grid()
    plt.show()
print("a")
